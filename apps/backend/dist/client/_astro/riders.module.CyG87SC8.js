import{c as i}from"./notification.DyHDLNjw.js";import{B as c}from"./endpoints.QH1VciTq.js";import{k as a}from"./index.B9b1t7QR.js";import{a as d}from"./index.CViUNx8d.js";const n=`${c}/api/users`;let p=[];const s=d(p),l=async()=>{try{const e=await a.get(`${n}/repartidor`,{credentials:"include"}).json();s.set(e)}catch(e){e.response&&(e.response.status===401||e.response.status===403)&&location.replace("/login"),console.error(e)}},u=async e=>{try{const t=await a.post(`${n}/repartidor`,{json:{...e,role:"repartidor"},credentials:"include"}).json();s.set(s.get().concat(t)),i({title:"Repartidor creado!",type:"success"})}catch(t){console.error(t);const r=await t.response.json();i({title:"Ups! Hubo un error",description:r.error,type:"error"})}},y=async e=>{const t=`${n}/repartidor/${e.id}`;try{const r=await a.put(t,{json:e,credentials:"include"}).json();s.set(s.get().map(o=>o.id===r.id?r:o)),i({title:"Repartidor actualizado!",description:`${r.email}`,type:"success"})}catch(r){console.error(r);const o=await r.response.json();i({title:"Ups! Hubo un error",description:o.error,type:"error"})}},m=async e=>{const t=`${n}/repartidor/${e}`;try{const r=await a.delete(t,{credentials:"include"}).json();s.set(s.get().filter(o=>o.id!=r.id)),i({title:"Repartidor eliminado!",description:`${r.email}`,type:"success"})}catch(r){console.error(r);const o=await r.response.json();i({title:"Ups! Hubo un error",description:o.error,type:"error"})}},w={addRider:u,getRiders:l,updateRider:y,removeRider:m};export{w as R,s as r};
