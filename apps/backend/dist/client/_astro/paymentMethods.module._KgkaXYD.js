import{c as a}from"./notification.DyHDLNjw.js";import{B as i}from"./endpoints.QH1VciTq.js";import{k as n}from"./index.B9b1t7QR.js";import{a as d}from"./index.CViUNx8d.js";const c=`${i}/api/paymentMethods`;let p=[];const s=d(p),l=async()=>{try{const t=await n.get(c,{credentials:"include"}).json();s.set(t)}catch(t){t.response&&(t.response.status===401||t.response.status===403)&&location.replace("/login"),console.error(t)}},y=async t=>{try{const o=await n.post(c,{json:t,credentials:"include"}).json();s.set(s.get().concat(o)),a({title:"Método de pago creado!",type:"success"})}catch(o){console.error(o);const e=await o.response.json();a({title:"Ups! Hubo un error",description:e.error,type:"error"})}},u=async t=>{const o=`${c}/${t.id}`;try{const e=await n.put(o,{json:t,credentials:"include"}).json();s.set(s.get().map(r=>r.id==e.id?e:r)),a({title:"Método de pago actualizado!",description:`${e.bank}`,type:"success"})}catch(e){console.error(e);const r=await e.response.json();a({title:"Ups! Hubo un error",description:r.error,type:"error"})}},m=async t=>{const o=`${c}/${t}`;try{const e=await n.delete(o,{credentials:"include"}).json();s.set(s.get().filter(r=>r.id!=e.id)),a({title:"Método de pago eliminado!",description:`${e.bank}`,type:"success"})}catch(e){console.error(e);const r=await e.response.json();a({title:"Ups! Hubo un error",description:r.error,type:"error"})}},f={addPaymentMethod:y,removePaymentMethod:m,updatePaymentMethod:u,getPaymentMethods:l};export{s as a,f as p};
