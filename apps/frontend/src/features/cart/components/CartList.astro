---
import CartItem from "./CartItem.astro";
---

<ul
  id="products-cart-list"
  class="m-0 p-2 list-none overflow-auto flex flex-col gap-8 rounded-md border border-gray-300 h-full md:w-[70%] lg:w-[50%]"
>
  <template id="product-cart-item-template">
    <CartItem product={{ id: 0, name: "", price: 0 }} quantity={0} />
  </template>
  <p id="empty-cart-message" class="text-center text-gray-500 hidden">
    AÃºn no has agregado productos a tu carrito.
  </p>
</ul>

<script>
  // @ts-nocheck
  import cartService from "./cart.module.js";
  import { cart } from "./cart.module.js";
  import { createNotification } from "../../notifications/notification.js";
  const productsCartList = document.querySelector("#products-cart-list");
  const productCartItemTemplate = document.querySelector(
    "#product-cart-item-template"
  );
  const emptyCartMessage = document.querySelector("#empty-cart-message");

  const renderCart = (cartItems) => {
    productsCartList.innerHTML = "";

    if (cartItems.length === 0) {
      emptyCartMessage.classList.remove("hidden");
      return;
    }
    emptyCartMessage.classList.add("hidden");

    for (const cartItem of cartItems) {
      const productItem = productCartItemTemplate.content.cloneNode(true);

      const cartItemElement = productItem.querySelector(".cart-item");
      const quantitySpan = productItem.querySelector(".quantity");
      const decreaseBtn = productItem.querySelector(".decrease-quantity-btn");
      const increaseBtn = productItem.querySelector(".increase-quantity-btn");
      const removeBtn = productItem.querySelector(".remove-item-btn");

      cartItemElement.dataset.productId = cartItem.productId;
      productItem.querySelector("h3").textContent = cartItem.name;
      productItem.querySelector("p").textContent =
        `$${cartItem.price.toFixed(2)}`;
      quantitySpan.textContent = cartItem.quantity;

      decreaseBtn.addEventListener("click", () => {
        cartService.updateProductQuantityInLocalStorage({
          productId: cartItem.productId,
          newQuantity: cartItem.quantity - 1,
        });
      });

      increaseBtn.addEventListener("click", () => {
        cartService.updateProductQuantityInLocalStorage({
          productId: cartItem.productId,
          newQuantity: cartItem.quantity + 1,
        });
      });

      removeBtn.addEventListener("click", () => {
        cartService.removeProductFromLocalStorage({
          productId: cartItem.productId,
        });
        createNotification({
          title: "Producto Eliminado",
          description: "El producto se ha eliminado de tu carrito.",
          type: "success",
        });
      });

      // Agregamos el item a la lista
      productsCartList.appendChild(productItem);
    }
  };

  cart.subscribe(renderCart);

  renderCart(cart.get());
</script>
